{"version":3,"sources":["helper/HelperApi.js","pages/Employee/EmployeeDetails.js","pages/Employee/AddUpdateEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["getCollection","objectType","collection","localStorage","getItem","toLowerCase","JSON","parse","e","console","log","saveCollection","collectionArr","setItem","stringify","isEmployeeExist","email","filter","emp","length","EmployeeDetails","useState","employees","setEmployees","useEffect","Grid","Column","floated","width","Header","as","to","Button","color","Icon","name","Table","Row","HeaderCell","Body","map","id","phoneNumber","Cell","Group","icon","AddUpdateEmployee","history","useHistory","employee","setEmployee","updateAction","setUpdateAction","useParams","employeeId","existingInfo","find","handleChange","target","value","Container","Form","Field","control","Input","label","defaultValue","placeholder","onChange","content","onClick","employeeObject","forEach","updateEmployeeInfo","error","push","saveEmployee","ListExampleTree","List","Item","Content","App","style","padding","Divider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfbb2251.chunk.js","sourcesContent":["/**\n * It fetches the collection from local storage.\n * @param {String} objectType\n * @returns {Array}\n */\nconst getCollection = (objectType) => {\n\tif (!objectType) return;\n\tlet collection = localStorage.getItem(objectType.toLowerCase());\n\ttry {\n\t\tcollection = JSON.parse(collection);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t} finally {\n\t\treturn collection || [];\n\t}\n};\n\n/**\n * Sets the item in the local storage.\n * @param {String} objectType\n * @param {Array} collectionArr\n * @returns\n */\nconst saveCollection = (objectType, collectionArr) => {\n\tif (!objectType) return;\n\tlocalStorage.setItem(objectType.toLowerCase(), JSON.stringify(collectionArr));\n}\n\n/**\n * Checks whether employee already exist in the collection or not.\n * @param {EmployeeObject} employee object\n * @returns {Boolean}\n */\nconst isEmployeeExist = ({ email }) => {\n\treturn getCollection('employees').filter(emp => {\n\t\treturn email && email.toLowerCase() === emp.email.toLowerCase();\n\t}).length;\n};\n\n/**\n * Saves the new object in collection.\n * @param {String} objectType Collection type\n * @param {EmployeeObject} employeeObject to be saved\n */\nconst saveEmployee = (objectType = 'employees', employeeObject) => {\n\tif (!isEmployeeExist(employeeObject)) {\n\t\tlet collection = getCollection(objectType);\n\t\tif (collection.length) {\n\t\t\temployeeObject.id = collection[collection.length - 1].id + 1;\n\t\t} else {\n\t\t\temployeeObject.id = 1;\n\t\t}\n\t\tcollection.push(employeeObject);\n\t\tsaveCollection('employees', collection);\n\t} else {\n\t\treturn { error: \"Employee already exist.\" };\n\t}\n};\n\n/**\n * Updates the employee information in collection.\n * @param {EmployeeObject} employeeObject\n */\nconst updateEmployeeInfo = (employeeObject) => {\n\tconst collection = getCollection('employees');\n\tif (collection.length) {\n\t\tcollection.forEach(emp => {\n\t\t\tif (employeeObject.id === emp.id) {\n\t\t\t\temp.name = employeeObject.name;\n\t\t\t\temp.email = employeeObject.email;\n\t\t\t\temp.phoneNumber = employeeObject.phoneNumber;\n\t\t\t}\n\t\t});\n\t\tsaveCollection('employees', collection);\n\t}\n};\n\n/**\n * Finds the employee object from ID.\n * @param {Number} employeeId\n * @returns EmployeeObject\n */\nconst getEmployeeById = (employeeId) => {\n\treturn getCollection('employees').find(({ id }) => {\n\t\treturn id === employeeId\n\t});\n};\n\nexport {\n\tgetCollection,\n\tsaveCollection,\n\tisEmployeeExist,\n\tsaveEmployee,\n\tgetEmployeeById,\n\tupdateEmployeeInfo\n};","import { Header, Grid, Button, Icon, Table } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getCollection } from \"../../helper/HelperApi\";\n\nconst EmployeeDetails = () => {\n  const [employees, setEmployees] = useState(null);\n\n  useEffect(() => {\n    let collection = getCollection(\"employees\");\n    setEmployees(collection);\n    console.log(collection);\n  }, []);\n\n  return (\n    <>\n      <Grid>\n        <Grid.Column floated=\"left\" width={6}>\n          <Header as=\"h3\">Employee Details</Header>\n          <p>Emplyee details and some more actions</p>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={6}>\n          <Link to=\"/updateEmployee\">\n            <Button color=\"blue\">\n              <Icon name=\"plus\" /> Add New\n            </Button>\n          </Link>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Table color=\"blue\" key=\"employeesTable\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Email</Table.HeaderCell>\n                <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                <Table.HeaderCell>Action</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {employees &&\n                employees.map(({ id, name, email, phoneNumber }) => {\n                  return (\n                    <Table.Row key={id}>\n                      <Table.Cell>{id}</Table.Cell>\n                      <Table.Cell>{name}</Table.Cell>\n                      <Table.Cell>{email}</Table.Cell>\n                      <Table.Cell>{phoneNumber}</Table.Cell>\n                      <Table.Cell>\n                        <Button.Group>\n                          <Link to={`/updateEmployee/${id}`}>\n                            <Button icon color=\"blue\">\n                              <Icon name=\"edit\" /> Edit\n                            </Button>\n                          </Link>\n                        </Button.Group>\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n};\n\nexport default EmployeeDetails;\n","import {\n  Header,\n  Container,\n  Form,\n  Button,\n  Grid,\n  Input,\n} from \"semantic-ui-react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  saveEmployee,\n  getEmployeeById,\n  updateEmployeeInfo,\n} from \"../../helper/HelperApi\";\n\nconst AddUpdateEmployee = () => {\n  let history = useHistory();\n\n  const [employee, setEmployee] = useState({});\n  const [updateAction, setUpdateAction] = useState(false);\n\n  let { id } = useParams();\n  useEffect(() => {\n    const existingInfo = getEmployeeById(+id);\n    if (existingInfo && existingInfo.email) {\n      setEmployee({ ...existingInfo });\n      setUpdateAction(true);\n    }\n  }, [id]);\n\n  const handleChange = (e) => {\n    let emp = employee;\n    emp[e.target.name] = e.target.value;\n    setEmployee(emp);\n    console.log(id);\n  };\n\n  const handleSubmit = () => {\n    let emp = employee;\n    if (updateAction) {\n      updateEmployeeInfo(emp);\n    } else {\n      saveEmployee(\"employees\", emp);\n    }\n    history.push(\"/employee\");\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h3\">{id ? \"Update\" : \"Add\"} Employee Details </Header>\n        <Grid>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Field\n                id=\"full-name\"\n                control={Input}\n                label=\"Name\"\n                name=\"name\"\n                defaultValue={(updateAction && employee && employee.name) || \"\"}\n                placeholder=\"joe schmoe\"\n                onChange={handleChange}\n              />\n              <Form.Field\n                id=\"phone-number\"\n                control={Input}\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                defaultValue={\n                  (updateAction && employee && employee.phoneNumber) || \"\"\n                }\n                onChange={handleChange}\n              />\n              <Form.Field\n                id=\"email\"\n                control={Input}\n                label=\"Email\"\n                name=\"email\"\n                defaultValue={\n                  (updateAction && employee && employee.email) || \"\"\n                }\n                placeholder=\"joe@schmoe.com\"\n                onChange={handleChange}\n              />\n              <Form.Field\n                id=\"form-button-control-public\"\n                control={Button}\n                color=\"blue\"\n                content=\"Save\"\n                onClick={handleSubmit}\n              />\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default AddUpdateEmployee;\n","import \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { List, Divider, Header, Grid } from \"semantic-ui-react\";\n\nimport EmployeeDetails from \"./pages/Employee/EmployeeDetails\";\nimport AddUpdateEmployee from \"./pages/Employee/AddUpdateEmployee\";\n\nfunction App() {\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <Header as=\"h2\">Employee Management</Header>\n      <Divider />\n      <Router>\n        <Grid>\n          <Grid.Column width={4}>\n            <ListExampleTree />\n          </Grid.Column>\n          <Grid.Column width={12}>\n            <Switch>\n              <Route path=\"/employee\">\n                <EmployeeDetails />\n              </Route>\n              <Route path=\"/updateEmployee/:id\">\n                <AddUpdateEmployee />\n              </Route>\n              <Route path=\"/updateEmployee\">\n                <AddUpdateEmployee />\n              </Route>\n            </Switch>\n          </Grid.Column>\n        </Grid>\n      </Router>\n    </div>\n  );\n}\n\nconst ListExampleTree = () => (\n  <List>\n    <List.Item>\n        <List.Icon name=\"users\" />\n        <List.Content>\n          <Link to=\"/employee\">\n            <List.Header>Employee Details</List.Header>\n          </Link>\n        </List.Content>\n    </List.Item>\n    <List.Item>\n      <List.Icon name=\"folder\" />\n      <List.Content>\n        <List.Header>CEO</List.Header>\n        <List.List>\n          <List.Item>\n            <List.Icon name=\"building\" />\n            <List.Content>\n              <List.Header>Head of Engineering</List.Header>\n              <List.List>\n                <List.Item>\n                  <List.Icon name=\"users\" />\n                  <List.Content>\n                    <List.Header>Team 1</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Icon name=\"users\" />\n                  <List.Content>\n                    <List.Header>Team 2</List.Header>\n                  </List.Content>\n                </List.Item>\n              </List.List>\n            </List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Icon name=\"building\" />\n            <List.Content>\n              <List.Header>Head of HR</List.Header>\n              <List.List>\n                <List.Item>\n                  <List.Icon name=\"users\" />\n                  <List.Content>\n                    <List.Header>Team 1</List.Header>\n                  </List.Content>\n                </List.Item>\n              </List.List>\n            </List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Icon name=\"building\" />\n            <List.Content>\n              <List.Header>Head of Design</List.Header>\n              <List.List>\n                <List.Item>\n                  <List.Icon name=\"users\" />\n                  <List.Content>\n                    <List.Header>Team 1</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Icon name=\"users\" />\n                  <List.Content>\n                    <List.Header>Team 2</List.Header>\n                  </List.Content>\n                </List.Item>\n              </List.List>\n            </List.Content>\n          </List.Item>\n        </List.List>\n      </List.Content>\n    </List.Item>\n  </List>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}