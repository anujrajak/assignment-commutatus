{"version":3,"sources":["helper/HelperApi.js","context/DepartmentsContext.js","pages/employee/EmployeeDetails.js","pages/employee/AddUpdateEmployee.js","pages/department/DepartmentDetails.js","pages/department/DepartmentForm.js","pages/team/TeamDetails.js","pages/team/TeamForm.js","App.js","reportWebVitals.js","index.js"],"names":["getCollection","objectType","collection","localStorage","getItem","toLowerCase","JSON","parse","saveCollection","e","console","log","collectionArr","setItem","stringify","isDepartmentExist","departmentName","some","department","name","isEmployeeExist","email","filter","emp","length","DepartmentsContext","createContext","DepartmentsProvider","children","useState","departments","setDepartments","employees","setEmployees","useEffect","Provider","value","EmployeeDetails","Grid","Column","floated","width","Header","as","to","className","Icon","Table","color","Row","HeaderCell","Body","map","id","phoneNumber","Cell","AddUpdateEmployee","history","useHistory","employee","setEmployee","updateAction","setUpdateAction","useParams","employeeId","existingInfo","find","handleChange","target","Container","Form","Field","control","Input","label","defaultValue","placeholder","onChange","onClick","employeeObject","forEach","updateEmployeeInfo","error","push","saveEmployee","DepartmentDetails","useContext","title","teams","DepartmentForm","setName","departmentObject","saveDepartment","TeamDetails","objectId","departmentInfo","TeamForm","departmentId","teamInfo","setTeamInfo","employeesOptions","setEmployeesOptions","empOptions","key","text","team","Select","options","search","multiple","selection","teamObject","dep","obj","teamMembers","includes","teamId","updatedEmployees","updatedDepartments","saveTeam","ListExampleTree","List","Item","Content","App","style","padding","Divider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1db8cd.chunk.js","sourcesContent":["/**\n * It fetches the collection from local storage.\n * @param {String} objectType\n * @returns {Array}\n */\nconst getCollection = (objectType) => {\n\tif (!objectType) return;\n\tlet collection = localStorage.getItem(objectType.toLowerCase());\n\ttry {\n\t\tif (collection) {\n\t\t\tcollection = JSON.parse(collection);\n\t\t} else {\n\t\t\tcollection = [];\n\t\t\tsaveCollection(objectType, collection);\n\t\t}\n\t} catch (e) {\n\t\tconsole.log(e);\n\t} finally {\n\t\treturn collection;\n\t}\n};\n\n/**\n * Sets the item in the local storage.\n * @param {String} objectType\n * @param {Array} collectionArr\n * @returns\n */\nconst saveCollection = (objectType, collectionArr) => {\n\tif (!objectType) return;\n\tlocalStorage.setItem(objectType.toLowerCase(), JSON.stringify(collectionArr));\n};\n\n/**\n * It saves the new department\n * @param {String} departmentName\n * @returns\n */\nconst saveDepartment = (departmentName) => {\n\tif (!isDepartmentExist(departmentName)) {\n\t\tconst departmentObject = {\n\t\t\tname: departmentName.toLowerCase(),\n\t\t\tteams: []\n\t\t};\n\t\tlet collection = getCollection('departments');\n\t\tif (collection.length) {\n\t\t\tdepartmentObject.id = collection[collection.length - 1].id + 1;\n\t\t} else {\n\t\t\tdepartmentObject.id = 1;\n\t\t}\n\t\tcollection.push(departmentObject);\n\t\tsaveCollection('departments', collection);\n\t} else {\n\t\treturn { error: \"Department already exist.\" };\n\t}\n};\n\n\n/**\n * Checks whether department already exist or not.\n * @param {String} departmentName\n * @returns\n */\nconst isDepartmentExist = (departmentName) => {\n\treturn getCollection('departments').some(department => {\n\t\treturn department.name === departmentName.toLowerCase();\n\t});\n}\n\n\n/**\n * Checks whether ant object is present or not based on name property.\n * @param {String} name\n * @param {Array} collection\n * @returns {Boolean}\n */\nconst isObjectExist = (name, collection) => {\n\treturn collection.some(obj => {\n\t\treturn obj.name === name.toLowerCase();\n\t});\n}\n\n/**\n * Checks whether employee already exist in the collection or not.\n * @param {EmployeeObject} employee object\n * @returns {Boolean}\n */\nconst isEmployeeExist = ({ email }) => {\n\treturn getCollection('employees').filter(emp => {\n\t\treturn email && email.toLowerCase() === emp.email.toLowerCase();\n\t}).length;\n};\n\n/**\n * Saves the new object in collection.\n * @param {String} objectType Collection type\n * @param {EmployeeObject} employeeObject to be saved\n */\nconst saveEmployee = (objectType = 'employees', employeeObject) => {\n\tif (!isEmployeeExist(employeeObject)) {\n\t\tlet collection = getCollection(objectType);\n\t\tif (collection.length) {\n\t\t\temployeeObject.id = collection[collection.length - 1].id + 1;\n\t\t} else {\n\t\t\temployeeObject.id = 1;\n\t\t}\n\t\tcollection.push(employeeObject);\n\t\tsaveCollection('employees', collection);\n\t} else {\n\t\treturn { error: \"Employee already exist.\" };\n\t}\n};\n\n/**\n * Updates the employee information in collection.\n * @param {EmployeeObject} employeeObject\n */\nconst updateEmployeeInfo = (employeeObject) => {\n\tconst collection = getCollection('employees');\n\tif (collection.length) {\n\t\tcollection.forEach(emp => {\n\t\t\tif (employeeObject.id === emp.id) {\n\t\t\t\temp.name = employeeObject.name;\n\t\t\t\temp.email = employeeObject.email;\n\t\t\t\temp.phoneNumber = employeeObject.phoneNumber;\n\t\t\t}\n\t\t});\n\t\tsaveCollection('employees', collection);\n\t}\n};\n\n/**\n * Finds the employee object from ID.\n * @param {Number} employeeId\n * @returns EmployeeObject\n */\nconst getEmployeeById = (employeeId) => {\n\treturn getCollection('employees').find(({ id }) => {\n\t\treturn id === employeeId\n\t});\n};\n\n/**\n * Finds the object object from ID.\n * @param {Number} employeeId\n * @returns EmployeeObject\n */\n const getObjectById = (collection, objectId) => {\n\treturn collection.find(({ id }) => {\n\t\treturn id === +objectId\n\t});\n };\n\n\n/**\n * Store team data.\n * @param {Object} teamObject\n * @returns {Object}\n */\nconst saveTeam = (teamObject) => {\n\tconst departments = getCollection('departments');\n\tif (departments.length) {\n\t\tteamObject.id = departments[departments.length - 1].id + 1;\n\t} else {\n\t\tteamObject.id = 1;\n\t}\n\tconst employees = getCollection('employees');\n\tdepartments.forEach(dep => {\n\t\tif (dep.id === teamObject.departmentId && !isObjectExist(teamObject.name, dep.teams)) {\n\t\t\tdep.teams.push(teamObject);\n\n\t\t\tconst selectedMembers = employees.filter(({ id }) => {\n\t\t\t\treturn teamObject.teamMembers.includes(id);\n\t\t\t});\n\n\t\t\tselectedMembers.forEach(emp => {\n\t\t\t\temp.departmentId = teamObject.departmentId;\n\t\t\t\temp.teamId = teamObject.id;\n\t\t\t});\n\t\t}\n\t});\n\n\tsaveCollection('employees', employees);\n\tsaveCollection('departments', departments);\n\n\treturn {\n\t\tupdatedEmployees: employees,\n\t\tupdatedDepartments: departments\n\t}\n};\n\nexport {\n\tgetCollection,\n\tsaveCollection,\n\tisEmployeeExist,\n\tsaveEmployee,\n\tgetEmployeeById,\n\tgetObjectById,\n\tupdateEmployeeInfo,\n\tsaveDepartment,\n\tisDepartmentExist,\n\tsaveTeam,\n\tisObjectExist\n};","import { createContext, useEffect, useState } from \"react\";\nimport { getCollection } from \"../helper/HelperApi\";\n\nexport const DepartmentsContext = createContext();\n\nexport const DepartmentsProvider = ({ children }) => {\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    setDepartments(getCollection('departments'));\n    setEmployees(getCollection('employees'));\n  }, []);\n\n  return (\n    <DepartmentsContext.Provider\n      value={{\n        departments,\n        setDepartments,\n        employees,\n        setEmployees\n      }}\n    >\n      {children}\n    </DepartmentsContext.Provider>\n  );\n};\n","import { Header, Grid, Icon, Table } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getCollection } from \"../../helper/HelperApi\";\n\nconst EmployeeDetails = () => {\n  const [employees, setEmployees] = useState(null);\n\n  useEffect(() => {\n    let collection = getCollection(\"employees\");\n    setEmployees(collection);\n    console.log(collection);\n  }, []);\n\n  return (\n    <div>\n      <Grid>\n        <Grid.Column floated=\"left\" width={6}>\n          <Header as=\"h3\">Employee Details</Header>\n          <p>Emplyee details and some more actions</p>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={6}>\n          <Link to=\"/updateEmployee\" className=\"ui primary button\">\n            <Icon name=\"plus\" /> New\n          </Link>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Table color=\"blue\" key=\"employeesTable\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Email</Table.HeaderCell>\n                <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                <Table.HeaderCell>Action</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {employees &&\n                employees.map(({ id, name, email, phoneNumber }) => {\n                  return (\n                    <Table.Row key={id}>\n                      <Table.Cell>{id}</Table.Cell>\n                      <Table.Cell>{name}</Table.Cell>\n                      <Table.Cell>{email}</Table.Cell>\n                      <Table.Cell>{phoneNumber}</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/updateEmployee/${id}`} className=\"ui primary button\">\n                          <Icon name=\"edit\" /> Edit\n                        </Link>\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeeDetails;\n","import {\n  Header,\n  Container,\n  Form,\n  Grid,\n  Input,\n} from \"semantic-ui-react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  saveEmployee,\n  getEmployeeById,\n  updateEmployeeInfo,\n} from \"../../helper/HelperApi\";\n\nconst AddUpdateEmployee = () => {\n  let history = useHistory();\n\n  const [employee, setEmployee] = useState({});\n  const [updateAction, setUpdateAction] = useState(false);\n\n  let { id } = useParams();\n  useEffect(() => {\n    const existingInfo = getEmployeeById(+id);\n    if (existingInfo && existingInfo.email) {\n      setEmployee({ ...existingInfo });\n      setUpdateAction(true);\n    }\n  }, [id]);\n\n  const handleChange = (e) => {\n    let emp = employee;\n    emp[e.target.name] = e.target.value;\n    setEmployee(emp);\n    console.log(id);\n  };\n\n  const handleSubmit = () => {\n    let emp = employee;\n    if (updateAction) {\n      updateEmployeeInfo(emp);\n    } else {\n      saveEmployee(\"employees\", emp);\n    }\n    history.push(\"/employee\");\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h3\">{id ? \"Update\" : \"Add\"} Employee Details </Header>\n        <Grid>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Field\n                id=\"full-name\"\n                control={Input}\n                label=\"Name\"\n                name=\"name\"\n                defaultValue={(updateAction && employee && employee.name) || \"\"}\n                placeholder=\"joe schmoe\"\n                onChange={handleChange}\n              />\n              <Form.Field\n                id=\"phone-number\"\n                control={Input}\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                defaultValue={\n                  (updateAction && employee && employee.phoneNumber) || \"\"\n                }\n                onChange={handleChange}\n              />\n              <Form.Field\n                id=\"email\"\n                control={Input}\n                label=\"Email\"\n                name=\"email\"\n                defaultValue={\n                  (updateAction && employee && employee.email) || \"\"\n                }\n                placeholder=\"joe@schmoe.com\"\n                onChange={handleChange}\n              />\n              <button className=\"ui primary button\" onClick={handleSubmit}>Save</button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default AddUpdateEmployee;\n","import { Header, Grid, Icon, Table } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { DepartmentsContext } from \"../../context/DepartmentsContext\";\n\nconst DepartmentDetails = () => {\n  const { departments, employees } = useContext(DepartmentsContext);\n\n  console.log(departments, employees);\n\n  return (\n    <div>\n      <Grid>\n        <Grid.Column floated=\"left\" width={6}>\n          <Header as=\"h3\">Departments Details</Header>\n          <p>Departments details and some more actions</p>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={6}>\n          <Link to=\"/AddDepartment\" className=\"ui primary button mini\">\n            <Icon name=\"plus\" /> New\n          </Link>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Table color=\"blue\" key=\"departmentsTable\">\n            <Table.Header>\n              <Table.Row>\n                {[\"ID\", \"Department Name\", \"Action\"].map((title) => {\n                  return (\n                    <Table.HeaderCell key={title}>{title}</Table.HeaderCell>\n                  );\n                })}\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {departments &&\n                departments.map(({ name, id, teams }) => {\n                  return (\n                    <Table.Row key={id}>\n                      <Table.Cell>{id}</Table.Cell>\n                      <Table.Cell>{name}</Table.Cell>\n                      <Table.Cell>\n                        <Link\n                          to={`/departmentDetails/${id}`}\n                          className=\"ui primary button mini\"\n                        >\n                          <Icon name=\"eye\" /> View\n                        </Link>\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default DepartmentDetails;\n","import { useState } from \"react\";\nimport { Header, Grid, Container, Form, Input } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { saveDepartment } from \"../../helper/HelperApi\";\n\nconst DepartmentForm = () => {\n  let history = useHistory();\n\n  const [name, setName] = useState(null);\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (name) {\n      const result = saveDepartment(name);\n      if (!result) {\n        history.push(\"/departments\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h3\">Add Department Details</Header>\n        <Grid>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Field\n                id=\"full-name\"\n                control={Input}\n                label=\"Department Name\"\n                name=\"departmentName\"\n                onChange={handleChange}\n              />\n              <button className=\"ui primary button\" onClick={handleSubmit}>\n                Save\n              </button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default DepartmentForm;\n","import { Header, Grid, Icon, Table } from \"semantic-ui-react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useContext, useState } from \"react\";\nimport { DepartmentsContext } from \"../../context/DepartmentsContext\";\nimport { getObjectById } from \"../../helper/HelperApi\";\n\nconst TeamDetails = () => {\n  const { departments } = useContext(DepartmentsContext);\n  const { id } = useParams();\n\n  const [departmentInfo] = useState(getObjectById(departments, id));\n\n  return (\n    <div>\n      <Grid>\n        <Grid.Column floated=\"left\" width={6}>\n          <Header as=\"h3\">{departmentInfo && departmentInfo.name}</Header>\n          <p>Below are the team details present under this department</p>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={6}>\n          <Link to={`/addTeam/${id}`} className=\"ui primary button mini\">\n            <Icon name=\"plus\" /> New\n          </Link>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Table color=\"blue\" key=\"departmentsTable\">\n            <Table.Header>\n              <Table.Row>\n                {[\"ID\", \"Team Name\", \"Team Leader\", \"Action\"].map((title) => {\n                  return (\n                    <Table.HeaderCell key={title}>{title}</Table.HeaderCell>\n                  );\n                })}\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {departmentInfo &&\n                departmentInfo.teams.map(({ name, id }) => {\n                  return (\n                    <Table.Row key={id}>\n                      <Table.Cell>{id}</Table.Cell>\n                      <Table.Cell>{name}</Table.Cell>\n                      <Table.Cell>\n                        <Link\n                          to={`/department/${id}`}\n                          className=\"ui primary button mini\"\n                        >\n                          <Icon name=\"eye\" /> View\n                        </Link>\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TeamDetails;\n","import { useState, useContext, useEffect } from \"react\";\nimport {\n  Header,\n  Grid,\n  Container,\n  Form,\n  Input,\n  Select,\n} from \"semantic-ui-react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { DepartmentsContext } from \"../../context/DepartmentsContext\";\nimport { saveTeam } from \"../../helper/HelperApi\";\n\nconst TeamForm = () => {\n  const history = useHistory();\n  const { departmentId } = useParams();\n\n  const { setDepartments, employees, setEmployees } =\n    useContext(DepartmentsContext);\n\n  const [teamInfo, setTeamInfo] = useState({ departmentId: +departmentId });\n  const [employeesOptions, setEmployeesOptions] = useState([]);\n\n  useEffect(() => {\n    const empOptions = employees.map(({ id, name }) => {\n      return {\n        key: id,\n        text: name,\n        value: id,\n      };\n    });\n    setEmployeesOptions(empOptions);\n  }, [employees]);\n\n  const handleChange = (e, { name, value }) => {\n    const team = teamInfo;\n    team[name] = value;\n    setTeamInfo(team);\n    console.log(teamInfo);\n  };\n\n  const handleSubmit = (e) => {\n    const { updatedDepartments, updatedEmployees } = saveTeam(teamInfo);\n    setEmployees(updatedEmployees);\n    setDepartments(updatedDepartments);\n    history.push(`/departmentDetails/${departmentId}`);\n  };\n\n  return (\n    <>\n      <Container>\n        <Header as=\"h3\">Add Team Details</Header>\n        <Grid>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Field\n                id=\"full-name\"\n                control={Input}\n                label=\"Team Name\"\n                name=\"name\"\n                onChange={handleChange}\n              />\n              <Form.Field\n                control={Select}\n                label=\"Team Leader\"\n                name=\"teamLeader\"\n                options={employeesOptions}\n                placeholder=\"Team Leader\"\n                search\n                onChange={handleChange}\n              />\n              <Form.Field\n                control={Select}\n                label=\"Team Members\"\n                options={employeesOptions}\n                placeholder=\"Team Memebers\"\n                name=\"teamMembers\"\n                search\n                multiple\n                selection\n                onChange={handleChange}\n              />\n              <button className=\"ui primary button\" onClick={handleSubmit}>\n                Save\n              </button>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default TeamForm;\n","import \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { List, Divider, Header, Grid } from \"semantic-ui-react\";\n\nimport { DepartmentsProvider } from \"./context/DepartmentsContext\";\n\nimport EmployeeDetails from \"./pages/employee/EmployeeDetails\";\nimport AddUpdateEmployee from \"./pages/employee/AddUpdateEmployee\";\n\nimport DepartmentDetails from \"./pages/department/DepartmentDetails\";\nimport DepartmentForm from \"./pages/department/DepartmentForm\";\nimport TeamDetails from \"./pages/team/TeamDetails\";\nimport TeamForm from \"./pages/team/TeamForm\";\n\nfunction App() {\n  return (\n    <DepartmentsProvider>\n      <div style={{ padding: \"1rem\" }}>\n        <Header as=\"h2\">Employee Management</Header>\n        <Divider />\n        <Router>\n          <Grid>\n            <Grid.Column width={4}>\n              <ListExampleTree />\n            </Grid.Column>\n            <Grid.Column width={12}>\n              <Switch>\n                <Route path=\"/employee\">\n                  <EmployeeDetails />\n                </Route>\n                <Route path=\"/updateEmployee/:id\">\n                  <AddUpdateEmployee />\n                </Route>\n                <Route path=\"/updateEmployee\">\n                  <AddUpdateEmployee />\n                </Route>\n                <Route path=\"/departmentDetails/:id\">\n                  <TeamDetails />\n                </Route>\n                <Route path=\"/addDepartment\">\n                  <DepartmentForm />\n                </Route>\n                <Route path=\"/departments\">\n                  <DepartmentDetails />\n                </Route>\n                <Route path=\"/addTeam/:departmentId\">\n                  <TeamForm />\n                </Route>\n              </Switch>\n            </Grid.Column>\n          </Grid>\n        </Router>\n      </div>\n    </DepartmentsProvider>\n  );\n}\n\nconst ListExampleTree = () => (\n  <List>\n    <List.Item>\n      <List.Icon name=\"users\" />\n      <List.Content>\n        <Link to=\"/employee\">\n          <List.Header>Employee Details</List.Header>\n        </Link>\n      </List.Content>\n    </List.Item>\n\n    <List.Item>\n      <List.Icon name=\"user\" />\n      <List.Content>\n        <Link to=\"/departments\">\n          <List.Header>CEO</List.Header>\n        </Link>\n        <List.List>\n          <List.Item>\n            <List.Icon name=\"building\" />\n            <List.Content>\n              <Link to=\"/department/1\">\n                <List.Header>Head of Engineering</List.Header>\n              </Link>\n            </List.Content>\n          </List.Item>\n        </List.List>\n      </List.Content>\n    </List.Item>\n  </List>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}